menu "XFS support"

config XFS_FS
	tristate "XFS filesystem support"
	select DMAPI if XFS_DMAPI
	help
	  XFS is a high performance journaling filesystem which originated
	  on the SGI IRIX platform.  It is completely multi-threaded, can
	  support large files and large filesystems, extended attributes,
	  variable block sizes, is extent based, and makes extensive use of
	  Btrees (directories, extents, free space) to aid both performance
	  and scalability.

	  Refer to the documentation at <http://oss.sgi.com/projects/xfs/>
	  for complete details.  This implementation is on-disk compatible
	  with the IRIX version of XFS.

	  To compile this file system support as a module, choose M here: the
	  module will be called xfs.  Be aware, however, that if the file
	  system of your root partition is compiled as a module, you'll need
	  to use an initial ramdisk (initrd) to boot.

config XFS_EXPORT
	bool
	default y if XFS_FS && EXPORTFS

config XFS_RT
	bool "Realtime support (EXPERIMENTAL)"
	depends on XFS_FS && EXPERIMENTAL
	help
	  If you say Y here you will be able to mount and use XFS filesystems
	  which contain a realtime subvolume. The realtime subvolume is a
	  separate area of disk space where only file data is stored. The
	  realtime subvolume is designed to provide very deterministic
	  data rates suitable for media streaming applications.

	  See the xfs man page in section 5 for a bit more information.

	  This feature is unsupported at this time, is not yet fully
	  functional, and may cause serious problems.

	  If unsure, say N.

config XFS_QUOTA
	tristate "Quota support"
	depends on XFS_FS
	help
	  If you say Y here, you will be able to set limits for disk usage on
	  a per user and/or a per group basis under XFS.  XFS considers quota
	  information as filesystem metadata and uses journaling to provide a
	  higher level guarantee of consistency.  The on-disk data format for
	  quota is also compatible with the IRIX version of XFS, allowing a
	  filesystem to be migrated between Linux and IRIX without any need
	  for conversion.

	  If unsure, say N.  More comprehensive documentation can be found in
	  README.quota in the xfsprogs package.  XFS quota can be used either
	  with or without the generic quota support enabled (CONFIG_QUOTA) -
	  they are completely independent subsystems.

config XFS_DMAPI
	bool "DMAPI support"
	depends on XFS_FS
	help
	  The Data Management API is a system interface used to implement
	  the interface defined in the X/Open document:
	  "Systems Management: Data Storage Management (XDSM) API",
	  dated February 1997.  This interface is used by hierarchical
	  storage management systems.
	  You should enable generic DMAPI support for this.

	  If unsure, say N.

config XFS_SECURITY
	bool "Security Label support"
	depends on XFS_FS
	help
	  Security labels support alternative access control models
	  implemented by security modules like SELinux.  This option
	  enables an extended attribute namespace for inode security
	  labels in the XFS filesystem.

	  If you are not using a security module that requires using
	  extended attributes for inode security labels, say N.

config XFS_POSIX_ACL
	bool "POSIX ACL support"
	depends on XFS_FS
	help
	  POSIX Access Control Lists (ACLs) support permissions for users and
	  groups beyond the owner/group/world scheme.

	  To learn more about Access Control Lists, visit the POSIX ACLs for
	  Linux website <http://acl.bestbits.at/>.

	  If you don't know what Access Control Lists are, say N.

config XFS_DEBUG
	bool "Debugging support (EXPERIMENTAL)"
	depends on XFS_FS && EXPERIMENTAL
	help
	  Say Y here to get an XFS build with many debugging features,
	  including ASSERT checks, function wrappers around macros,
	  and extra sanity-checking functions in various code paths.

	  Note that the resulting code will be HUGE and SLOW, and probably
	  not useful unless you are debugging a particular problem.

	  Say N unless you are an XFS developer, or you play one on TV.

config XFS_TRACE
	bool "Tracing support (EXPERIMENTAL)"
	depends on XFS_FS && EXPERIMENTAL
	help
	  Say Y here to get an XFS build with activity tracing enabled.	
	  Enabling this option will attach historical information to XFS
	  inodes, buffers, certain locks, the log, the IO path, and a
	  few other key areas within XFS.  These traces can be examined
	  using the kdb kernel debugger.

	  Say N unless you are an XFS developer.

endmenu
