#
# Makefile for XFS on Linux.
#
# Note! Dependencies are done automagically by 'make dep', which also
# removes any old dependencies. DON'T put your own dependencies here
# unless it's something special (ie not a .c file).
#

#CFLAGS := $(filter-out -Wall,$(CFLAGS))
EXTRA_CFLAGS += -g3 -Wno-unused  -Wno-unknown-pragmas -Wno-parentheses \
                -Wno-uninitialized -I./linux -I./pseudo-inc -I. -D_KERNEL \
		-funsigned-char 

ALL_SUB_DIRS = linux
SUB_DIRS = ${ALL_SUB_DIRS}


O_TARGET := xfs.o

M_OBJS   := $(O_TARGET)
XFS_OBJS  :=   xfs_alloc.o \
                xfs_alloc_btree.o \
                xfs_attr.o \
                xfs_attr_leaf.o \
                xfs_bit.o \
                xfs_bmap.o \
                xfs_bmap_btree.o \
                xfs_btree.o \
                xfs_buf_item.o \
                xfs_da_btree.o \
                xfs_dir.o \
                xfs_dir2.o \
                xfs_dir2_block.o \
                xfs_dir2_data.o \
                xfs_dir2_leaf.o \
                xfs_dir2_node.o \
                xfs_dir2_sf.o \
                xfs_dir2_trace.o \
                xfs_dir_leaf.o \
                xfs_error.o \
                xfs_extfree_item.o \
                xfs_fsops.o \
                xfs_ialloc.o \
                xfs_ialloc_btree.o \
                xfs_icrash.o \
                xfs_iget.o \
                xfs_inode.o \
                xfs_inode_item.o \
                xfs_iocore.o \
                xfs_itable.o \
                xfs_dfrag.o \
                xfs_log.o \
                xfs_log_recover.o \
                xfs_macros.o \
                xfs_misc.o \
                xfs_mount.o \
                xfs_rename.o \
                xfs_trans.o \
                xfs_trans_ail.o \
                xfs_trans_buf.o \
                xfs_trans_extfree.o \
                xfs_trans_inode.o \
                xfs_trans_item.o \
                xfs_utils.o \
                xfs_vfsops.o \
                xfs_vnodeops.o \
                xfs_rw.o \
		xfsdmapistubs.o \
		xfsquotasstubs.o \
		xfsrtstubs.o \
		macstubs.o \
		oplockstubs.o
#                xfs_rpc_item.o
 
FS_LINKS = xfs_alloc xfs_macros xfs_types xfs_inum xfs_log \
           xfs_ag xfs_sb xfs_trans xfs_dir xfs_dir2 xfs_mount \
           xfs_error xfs_bmap_btree xfs_attr_sf xfs_dir_sf xfs_dir2_sf \
           xfs_dinode xfs_imap xfs_inode_item xfs_inode \
           xfs_ialloc_btree xfs_ialloc xfs_log_priv \
           xfs_buf_item xfs_alloc_btree xfs_log_recover xfs_extfree_item \
           xfs_trans_priv xfs_bit xfs_quota xfs_dqblk xfs_dquot_item \
           xfs_dquot xfs_qm xfs_rw xfs_btree xfs_bmap xfs_rtalloc xfs_da_btree \
           xfs_dir_leaf xfs_fsops xfs_attr_leaf xfs_dir2_data xfs_dir2_leaf \
           xfs_dir2_block xfs_dir2_node

#O_OBJS :=  $(XFS_OBJS) $(LINO_OBJS) linux/linux_xfs.o libgcc.a
O_OBJS :=  $(XFS_OBJS) linux/linux_xfs.o libgcc.a

include $(TOPDIR)/Rules.make

links:  $(FS_LINKS) $(FOO_LINKS) #sys ksys fs 

libgcc.a: 
	ln -sf `find /usr/lib/gcc-lib -name libgcc.a -print | head -1`   

$(FS_LINKS):
	@(cd pseudo-inc/sys/fs;if [ -L $@.h ]; then rm -f $@.h; fi;  ln -s ../../../$@.h $@.h)
