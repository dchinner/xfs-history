#
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#
# Makefile for XFS on Linux.
#
# Note! Dependencies are done automagically by 'make dep', which also
# removes any old dependencies. DON'T put your own dependencies here
# unless it's something special (ie not a .c file).
#

#CFLAGS := $(filter-out -Wall,$(CFLAGS))

# This needs -I. because everything does #include <xfs.h> instead of "xfs.h".
# The code is wrong, local files should be included using "xfs.h", not <xfs.h>
# but I am not going to change every file at the moment.  Keith Owens.
EXTRA_CFLAGS += -Wno-unused  -Wno-parentheses \
                -Wno-uninitialized -I. \
		-funsigned-char 

EXTRA_CFLAGS += $(shell if $(CC) -Wno-unknown-pragmas -S -o /dev/null -xc /dev/null >/dev/null 2>&1; then echo "-Wno-unknown-pragmas"; fi)


ifeq ($(CONFIG_XFS_DEBUG),y)
	EXTRA_CFLAGS += -DDEBUG -DXFSDEBUG
endif

subdir-$(CONFIG_XFS_FS)		+= linux
# Uncomment when grio directory created
# subdir-$(CONFIG_XFS_GRIO)	+= grio		
# Kludge, 2.4.0-test13-pre3 Makefiles are still not quite right.  Keith Owens.
ifneq ($(CONFIG_XFS_DMAPI),)
  subdir-$(CONFIG_XFS_FS)	+= dmapi
endif
subdir-$(CONFIG_XFS_SUPPORT)	+= support

obj-y :=
obj-m :=
obj-n :=
obj-  :=

# Kludge, 2.4.0-test13-pre3 Makefiles are still not quite right.  Keith Owens.
ifeq ($(CONFIG_XFS_FS),y)
  O_TARGET			:= xfs.o
else
  list-multi			:= xfs.o
  obj-$(CONFIG_XFS_FS)		:= xfs.o
endif

# xfsidbg is always a module, but only if kdb is available.
ifeq ($(CONFIG_KDB),y)
  obj-m				+= xfsidbg.o
endif

ifeq ($(CONFIG_XFS_GRIO),)
  xfs-objs			+= xfsrtstubs.o
else
  xfs-objs			+= xfs_rtalloc.o xfs_rtbit.o xfs_grio.o
endif

ifeq ($(CONFIG_XFS_DMAPI),)
  xfs-objs			+= xfsdmapistubs.o
else
  xfs-objs			+= dmapi/dmapi.o xfs_dmapi.o
endif

ifeq ($(CONFIG_XFS_QUOTA),)
  xfs-objs			+= xfsquotasstubs.o
else
  xfs-objs			+= xfs_dquot.o xfs_trans_dquot.o xfs_dquot_item.o xfs_qm_syscalls.o xfs_qm.o
endif

ifneq ($(CONFIG_FS_POSIX_ACL),)
  xfs-objs			+= xfs_acl.o
endif

xfs-objs			+= xfs_alloc.o \
				   xfs_alloc_btree.o \
				   xfs_attr.o \
				   xfs_attr_fetch.o \
				   xfs_attr_leaf.o \
				   xfs_bit.o \
				   xfs_bmap.o \
				   xfs_bmap_btree.o \
				   xfs_btree.o \
				   xfs_buf_item.o \
				   xfs_da_btree.o \
				   xfs_dir.o \
				   xfs_dir2.o \
				   xfs_dir2_block.o \
				   xfs_dir2_data.o \
				   xfs_dir2_leaf.o \
				   xfs_dir2_node.o \
				   xfs_dir2_sf.o \
				   xfs_dir2_trace.o \
				   xfs_dir_leaf.o \
				   xfs_error.o \
				   xfs_extfree_item.o \
				   xfs_fsops.o \
				   xfs_ialloc.o \
				   xfs_ialloc_btree.o \
				   xfs_iget.o \
				   xfs_inode.o \
				   xfs_inode_item.o \
				   xfs_iocore.o \
				   xfs_itable.o \
				   xfs_dfrag.o \
				   xfs_log.o \
				   xfs_log_recover.o \
				   xfs_macros.o \
				   xfs_mount.o \
				   xfs_rename.o \
				   xfs_trans.o \
				   xfs_trans_ail.o \
				   xfs_trans_buf.o \
				   xfs_trans_extfree.o \
				   xfs_trans_inode.o \
				   xfs_trans_item.o \
				   xfs_utils.o \
				   xfs_vfsops.o \
				   xfs_vnodeops.o \
				   xfs_rw.o \
				   macstubs.o

# Objects not built in this directory
xfs-objs			+= linux/linux_xfs.o
ifeq ($(CONFIG_XFS_SUPPORT),y)
  xfs-objs			+= support/xfs_support.o
endif

# Kludge, 2.4.0-test13-pre3 Makefiles are still not quite right.  Keith Owens.
ifeq ($(CONFIG_XFS_FS),y)
  obj-y				:= $(xfs-objs)
else
  ifeq ($(CONFIG_XFS_FS)$(MAKING_MODULES),m1)
  obj-m				+= $(xfs-objs)
# This is really nasty, but Rules.make was never designed for multi directory
# modules.  Keith Owens.
xfs.o: $(xfs-objs) $(patsubst %,_modsubdir_%,$(subdir-m))
	$(LD) -r -o $@ $(xfs-objs)
  endif
endif

include $(TOPDIR)/Rules.make

ifneq ($(wildcard .hdepend),)
include .hdepend
endif
